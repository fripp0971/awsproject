{"filter":false,"title":"template.yaml","tooltip":"/order-app/template.yaml","undoManager":{"mark":21,"position":21,"stack":[[{"start":{"row":13,"column":2},"end":{"row":27,"column":0},"action":"remove","lines":["HelloWorldFunction:","    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction","    Properties:","      CodeUri: hello-world/","      Handler: app.lambdaHandler","      Runtime: nodejs14.x","      Architectures:","        - x86_64","      Events:","        HelloWorld:","          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api","          Properties:","            Path: /hello","            Method: get",""],"id":3}],[{"start":{"row":15,"column":2},"end":{"row":27,"column":0},"action":"remove","lines":["# ServerlessRestApi is an implicit API created out of Events key under Serverless::Function","  # Find out more about other implicit resources you can reference within SAM","  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api","  HelloWorldApi:","    Description: \"API Gateway endpoint URL for Prod stage for Hello World function\"","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/\"","  HelloWorldFunction:","    Description: \"Hello World Lambda Function ARN\"","    Value: !GetAtt HelloWorldFunction.Arn","  HelloWorldFunctionIamRole:","    Description: \"Implicit IAM Role created for Hello World function\"","    Value: !GetAtt HelloWorldFunctionRole.Arn",""],"id":4}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst",""],"id":5}],[{"start":{"row":11,"column":10},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":12,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5",""],"id":7}],[{"start":{"row":31,"column":8},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":32,"column":0},"end":{"row":34,"column":26},"action":"insert","lines":["DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable"],"id":9}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"insert","lines":["  "],"id":10}],[{"start":{"row":33,"column":2},"end":{"row":33,"column":4},"action":"remove","lines":["  "],"id":11}],[{"start":{"row":33,"column":2},"end":{"row":33,"column":4},"action":"insert","lines":["  "],"id":12}],[{"start":{"row":28,"column":29},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":13},{"start":{"row":29,"column":0},"end":{"row":29,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":29,"column":6},"end":{"row":29,"column":8},"action":"remove","lines":["  "],"id":14},{"start":{"row":29,"column":4},"end":{"row":29,"column":6},"action":"remove","lines":["  "]},{"start":{"row":29,"column":2},"end":{"row":29,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":29,"column":2},"end":{"row":30,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":30,"column":0},"end":{"row":30,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":30,"column":2},"end":{"row":56,"column":0},"action":"insert","lines":["  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","",""],"id":16}],[{"start":{"row":30,"column":2},"end":{"row":30,"column":4},"action":"remove","lines":["  "],"id":17}],[{"start":{"row":62,"column":26},"end":{"row":63,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":63,"column":0},"end":{"row":63,"column":4},"action":"insert","lines":["    "]},{"start":{"row":63,"column":4},"end":{"row":64,"column":0},"action":"insert","lines":["",""]},{"start":{"row":64,"column":0},"end":{"row":64,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":64,"column":2},"end":{"row":64,"column":4},"action":"remove","lines":["  "],"id":19}],[{"start":{"row":64,"column":2},"end":{"row":67,"column":0},"action":"insert","lines":["  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn",""],"id":20}],[{"start":{"row":64,"column":2},"end":{"row":64,"column":4},"action":"remove","lines":["  "],"id":21}],[{"start":{"row":56,"column":0},"end":{"row":101,"column":0},"action":"insert","lines":["  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"",""],"id":22}],[{"start":{"row":112,"column":0},"end":{"row":113,"column":0},"action":"insert","lines":["",""],"id":23}],[{"start":{"row":113,"column":0},"end":{"row":116,"column":0},"action":"insert","lines":["  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"",""],"id":24}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":115,"column":13},"end":{"row":115,"column":13},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":2,"state":["mlStringPre",0],"mode":"ace/mode/yaml"}},"timestamp":1662149726841,"hash":"e4f3fc6de670f617f94a07335726975677a2d792"}